{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Union Byteclass Collection Examples"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "from byteclasses.types.collections import FixedSizeCollection, union, member\n",
    "from byteclasses.types.primitives.integers import Int16, UInt16, UInt32, UInt64, Int8, UInt8"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Basic Union"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "BasicUnion(var1=UInt8(0), var2=UInt16(0)) 2 bytearray(b'\\x00\\x00')\n"
     ]
    }
   ],
   "source": [
    "@union\n",
    "class BasicUnion:\n",
    "    \"\"\"A basic union byteclass.\"\"\"\n",
    "\n",
    "    var1: UInt8 = UInt8()\n",
    "    var2: UInt16 = UInt16()\n",
    "bu = BasicUnion()\n",
    "print(bu, len(bu), bu.data)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Large Union Byteclass"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "len(lu)=8\n",
      "LargeUnion(uint64=UInt64(18014948265296384), uint32=UInt32(4194432), uint16_be=UInt16(64), uint16_le=UInt16(16384), int16=Int16(64), uint8=UInt8(0), int8=Int8(0))\n"
     ]
    }
   ],
   "source": [
    "@union(byte_order=b\">\")\n",
    "class LargeUnion:\n",
    "    \"\"\"A large union class.\"\"\"\n",
    "\n",
    "    uint64: UInt64 = UInt64(512, byte_order=b\">\")\n",
    "    uint32: UInt32 = UInt32(128, byte_order=b\">\")\n",
    "    uint16_be: UInt16 = UInt16(64, byte_order=b\">\")\n",
    "    uint16_le: UInt16 = UInt16(64, byte_order=b\"<\")\n",
    "    int16: Int16 = Int16(64, byte_order=b\">\")\n",
    "    uint8: UInt8 = member(default_factory=UInt8)\n",
    "    int8: Int8 = member(default_factory=Int8)\n",
    "\n",
    "lu: FixedSizeCollection = LargeUnion()\n",
    "print(f\"{len(lu)=}\")\n",
    "print(lu)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "bytearray(b'\\x00\\x00\\x00\\xff\\xff\\xff\\xff\\x00')\n",
      "LargeUnion(uint64=UInt64(1099511627520), uint32=UInt32(255), uint16_be=UInt16(0), uint16_le=UInt16(0), int16=Int16(0), uint8=UInt8(0), int8=Int8(0))\n"
     ]
    }
   ],
   "source": [
    "lu.uint64 = 0xFFFFFFFF00\n",
    "print(lu.data)\n",
    "print(lu)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Each member will interprete their assigned bytes according to their own specification. This includes their `byte_order`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "uint16_be: b'\\xfa\\x00' 64000\n",
      "uint16_le: b'\\xfa\\x00' 250\n"
     ]
    }
   ],
   "source": [
    "lu.uint16_be = 64000\n",
    "print(\"uint16_be:\", lu.uint16_be.data, lu.uint16_be)\n",
    "print(\"uint16_le:\", lu.uint16_le.data, lu.uint16_le)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": ".venv",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
